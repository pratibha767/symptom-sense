{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prati\\\\OneDrive\\\\Desktop\\\\new SPD\\\\symptom-sense\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [logs, setLogs] = useState([]);\n  useEffect(() => {\n    axios.get(\"/api/symptoms\", {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(res => setLogs(res.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Symptom History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: logs.map(log => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [log.date.slice(0, 10), \": \", log.symptoms.join(\", \"), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 63\n        }, this), \"Notes: \", log.notes]\n      }, log._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"6h9FKNtuyCQaVwwdLqmS9omOzEQ=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Dashboard","_s","logs","setLogs","get","headers","Authorization","localStorage","getItem","then","res","data","children","fileName","_jsxFileName","lineNumber","columnNumber","map","log","date","slice","symptoms","join","notes","_id","_c","$RefreshReg$"],"sources":["C:/Users/prati/OneDrive/Desktop/new SPD/symptom-sense/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Dashboard() {\r\n  const [logs, setLogs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/api/symptoms\", {\r\n      headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\r\n    }).then(res => setLogs(res.data));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Symptom History</h2>\r\n      <ul>\r\n        {logs.map(log => (\r\n          <li key={log._id}>\r\n            {log.date.slice(0, 10)}: {log.symptoms.join(\", \")}<br />\r\n            Notes: {log.notes}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACdE,KAAK,CAACO,GAAG,CAAC,eAAe,EAAE;MACzBC,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAAG;IACtE,CAAC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIP,OAAO,CAACO,GAAG,CAACC,IAAI,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBjB,OAAA;MAAAa,QAAA,EACGV,IAAI,CAACe,GAAG,CAACC,GAAG,iBACXnB,OAAA;QAAAa,QAAA,GACGM,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAC,IAAE,EAACF,GAAG,CAACG,QAAQ,CAACC,IAAI,CAAC,IAAI,CAAC,eAACvB,OAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,WACjD,EAACE,GAAG,CAACK,KAAK;MAAA,GAFVL,GAAG,CAACM,GAAG;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACf,EAAA,CAtBQD,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAwBlB,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}